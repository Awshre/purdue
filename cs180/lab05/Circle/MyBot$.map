Load Map - Tue Sep 21 10:13:42 EDT 2010

Main class:       MyBot
Classes:          53
Interfaces:       3
Methods:          120
Constants:        76
Instance fields:  77
Static fields:    22
Static data size: 100
Code size:        7017
Start address:    8000
End address:      9b68

80dc 80dd java.lang.Object.<init>()
80e2 80f5 java.lang.Object.getClass()
80ff 8113 java.lang.Object.clone()
811d 8141 java.lang.Object.toString()
8228 8239 java.lang.Thread.run()
823e 8244 java.lang.Thread.setName(java.lang.String)
8248 8273 java.lang.Thread.sleep(long)
8277 827c java.lang.Thread.<clinit>()
828a 8290 java.lang.Thread.<init>()
8299 82b1 java.lang.Thread.<init>(java.lang.Runnable)
82b5 82d4 java.lang.Thread.<init>(java.lang.Runnable, java.lang.String)
82de 830e java.lang.Thread.toString()
8313 8318 java.lang.Thread.getName()
8372 83b1 com.ridgesoft.intellibrain.StartupThread.run()
83fd 8407 java.lang.String.createString(byte[])
840b 841a java.lang.String.<init>(byte[], int)
841f 842a java.lang.String.getBytes()
842e 843f java.lang.String.<init>()
8443 8458 java.lang.String.<init>(byte[])
845d 8463 java.lang.String.length()
8468 848a java.lang.String.getBytes(int, int, byte[], int)
848e 84be java.lang.String.<init>(char[], int, int)
84c2 84ec java.lang.String.<init>(byte[], int, int)
84f0 84f5 java.lang.String.valueOf(java.lang.Object)
84fa 84fc java.lang.String.toString()
8590 868e java.lang.Throwable.vmThrow(int)
869a 86bf java.lang.Throwable.<init>()
86cc 8771 java.lang.Throwable.printStackTrace()
8775 879c java.lang.Throwable.<clinit>()
87a5 87ad java.lang.Throwable.init()
87b9 87fb java.lang.Throwable.<init>(java.lang.String)
88a1 88ab java.lang.InternalError.<init>()
88af 88ba java.lang.InternalError.<init>(java.lang.String)
88e9 88f3 java.lang.OutOfMemoryError.<init>()
88f7 8902 java.lang.OutOfMemoryError.<init>(java.lang.String)
8933 893d java.lang.StackOverflowError.<init>()
8941 894c java.lang.StackOverflowError.<init>(java.lang.String)
8d3d 8fd4 MyBot.main(java.lang.String[])
9008 901e java.io.OutputStream.write(byte[])
9028 9029 java.io.OutputStream.flush()
902e 904c java.io.OutputStream.write(byte[], int, int)
9087 9091 java.io.FilterOutputStream.<init>(java.io.OutputStream)
9096 909f java.io.FilterOutputStream.write(byte[])
90a4 90ad java.io.FilterOutputStream.write(int)
90b2 90ba java.io.FilterOutputStream.flush()
90bf 90ca java.io.FilterOutputStream.write(byte[], int, int)
90fd 9108 java.io.PrintStream.<init>(java.io.OutputStream)
910d 9117 java.io.PrintStream.println(java.lang.String)
9124 913b java.io.PrintStream.print(java.lang.String)
9148 9162 java.io.PrintStream.println()
919c 91ab com.ridgesoft.io.OutputStreamTee.<init>(java.io.OutputStream, java.io.OutputStream)
91bf 91d8 com.ridgesoft.io.OutputStreamTee.write(byte[])
91ec 9205 com.ridgesoft.io.OutputStreamTee.write(int)
9219 9230 com.ridgesoft.io.OutputStreamTee.flush()
9244 9261 com.ridgesoft.io.OutputStreamTee.write(byte[], int, int)
92b0 9313 com.ridgesoft.io.DisplayOutputStream.<init>(com.ridgesoft.io.Display)
9317 9324 com.ridgesoft.io.DisplayOutputStream.<clinit>()
9329 9332 com.ridgesoft.io.DisplayOutputStream.write(byte[])
9337 9384 com.ridgesoft.io.DisplayOutputStream.write(int)
9389 93b5 com.ridgesoft.io.DisplayOutputStream.flush()
93ba 93c6 com.ridgesoft.io.DisplayOutputStream.write(byte[], int, int)
93ca 9448 com.ridgesoft.io.DisplayOutputStream.scroll()
9491 9496 com.ridgesoft.vm.DebugOutputStream.<clinit>()
949b 94a4 com.ridgesoft.vm.DebugOutputStream.write(byte[])
94a9 94f2 com.ridgesoft.vm.DebugOutputStream.write(int)
94ff 9520 com.ridgesoft.vm.DebugOutputStream.flush()
9525 9531 com.ridgesoft.vm.DebugOutputStream.write(byte[], int, int)
9554 9558 com.ridgesoft.vm.VM.getDebugOutputStream()
9566 9575 com.ridgesoft.vm.VM.<clinit>()
95b3 95ca com.ridgesoft.intellibrain.IntelliBrain.getOutputStream()
95ce 95e2 com.ridgesoft.intellibrain.IntelliBrain.getLcdDisplay()
95e6 9629 com.ridgesoft.intellibrain.IntelliBrain.getServo(int)
962d 9634 com.ridgesoft.intellibrain.IntelliBrain.<clinit>()
9640 96e6 com.ridgesoft.intellibrain.IntelliBrain.initialize()
9717 971c java.lang.System.setOut(java.io.PrintStream)
9720 9725 java.lang.System.setErr(java.io.PrintStream)
9784 978e com.ridgesoft.io.Display.print(int, java.lang.String)
9793 97c7 com.ridgesoft.io.Display.print(int, byte[])
97cc 97d1 com.ridgesoft.io.Display.getWidth()
97d6 97db com.ridgesoft.io.Display.getHeight()
97df 97f0 com.ridgesoft.io.Display.<init>(int, int)
982a 9832 com.ridgesoft.intellibrain.IntelliBrainDisplay.<init>()
9837 983e com.ridgesoft.intellibrain.IntelliBrainDisplay.printChar(int, int, byte)
987e 9883 java.lang.Class.getName()
9887 9891 java.lang.Class.<init>(java.lang.String)
98e3 98fe java.lang.StringBuilder.<init>(java.lang.String)
9903 992c java.lang.StringBuilder.append(java.lang.String)
9931 9942 java.lang.StringBuilder.toString()
9947 9980 java.lang.StringBuilder.ensureCapacity(int)
9985 99e0 java.lang.StringBuilder.append(int)
99e5 9a12 java.lang.StringBuilder.append(char[], int, int)
9a16 9a28 java.lang.StringBuilder.<init>()
9a4f 9a93 java.lang.Integer.toHexString(int)
9a98 9aa0 java.lang.Integer.toString()
9aa4 9ab3 java.lang.Integer.toString(int)
9aef 9afa com.ridgesoft.intellibrain.IntelliBrainServo.<init>(int)
9aff 9b08 com.ridgesoft.intellibrain.IntelliBrainServo.setPosition(int)
9b0d 9b16 com.ridgesoft.intellibrain.IntelliBrainServo.off()
