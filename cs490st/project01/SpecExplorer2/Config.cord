using TFTPClientNameSpace;

config Main
{
    switch GeneratedTestPath = "..\\SpecExplorer2.TestSuite";

    action TFTPClient(string server);
    action TFTPClient(string server, int port);

    action abstract static void TFTPClient.initialize();
    action abstract static void TFTPClient.Get();
    action abstract static void TFTPClient.Put();
    action abstract static bool TFTPClient.canGetExit(int len);
    action abstract static bool TFTPClient.canPutExit(int len);
    action abstract static void TFTPClient.sendACK();
    action abstract static int TFTPClient.receiveACK();
    action abstract static void TFTPClient.sendReadRequest();
    action abstract static void TFTPClient.sendWriteRequest();
    action abstract static int TFTPClient.receiveDataBlock();
    action abstract static void TFTPClient.sendDataBlock();
    
    action TFTPClient.TFTPException(int errCode, string errMsg);
    action string TFTPClient.TFTPException.ToString();
}

config ParameterCombinationConfig : Main
{
    action abstract static bool TFTPClient.canGetExit(int len)
    where {. Condition.In(len, 511, 521); .};

    action abstract static bool TFTPClient.canPutExit(int len)
    where {. Condition.In(len, 511, 521); .};
}

machine GetMachine() : Main
{
    initialize; sendReadRequest; (receiveDataBlock; sendACK; canGetExit)* || (construct model program from ParameterCombinationConfig)
}

machine PutMachine() : ParameterCombinationConfig
{
    initialize; sendWriteRequest; (receiveACK; sendDataBlock; canPutExit)* || (construct model program from ParameterCombinationConfig)
}